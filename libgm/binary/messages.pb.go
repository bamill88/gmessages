// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: messages.proto

package binary

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BugleRoute int32

const (
	BugleRoute_UNKNOWN_BUGLE_ROUTE BugleRoute = 0
	BugleRoute_DataEvent           BugleRoute = 19
	BugleRoute_PairEvent           BugleRoute = 14
)

// Enum value maps for BugleRoute.
var (
	BugleRoute_name = map[int32]string{
		0:  "UNKNOWN_BUGLE_ROUTE",
		19: "DataEvent",
		14: "PairEvent",
	}
	BugleRoute_value = map[string]int32{
		"UNKNOWN_BUGLE_ROUTE": 0,
		"DataEvent":           19,
		"PairEvent":           14,
	}
)

func (x BugleRoute) Enum() *BugleRoute {
	p := new(BugleRoute)
	*p = x
	return p
}

func (x BugleRoute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BugleRoute) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (BugleRoute) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x BugleRoute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BugleRoute.Descriptor instead.
func (BugleRoute) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type ActionType int32

const (
	ActionType_UNSPECIFIED                            ActionType = 0
	ActionType_LIST_CONVERSATIONS                     ActionType = 1
	ActionType_LIST_MESSAGES                          ActionType = 2
	ActionType_SEND_MESSAGE                           ActionType = 3
	ActionType_LIST_CONVERSATIONS_SYNC                ActionType = 1111
	ActionType_MESSAGE_UPDATES                        ActionType = 4
	ActionType_LIST_CONTACTS                          ActionType = 6
	ActionType_CONVERSATION_UPDATES                   ActionType = 7
	ActionType_GET_OR_CREATE_CONVERSATION             ActionType = 9
	ActionType_MESSAGE_READ                           ActionType = 10
	ActionType_BROWSER_PRESENCE_CHECK                 ActionType = 11
	ActionType_TYPING_UPDATES                         ActionType = 12
	ActionType_SETTINGS_UPDATE                        ActionType = 13
	ActionType_USER_ALERT                             ActionType = 14
	ActionType_UPDATE_CONVERSATION                    ActionType = 15
	ActionType_GET_UPDATES                            ActionType = 16
	ActionType_ACK_BROWSER_PRESENCE                   ActionType = 17
	ActionType_LIST_STICKER_SETS                      ActionType = 18
	ActionType_LEAVE_RCS_GROUP                        ActionType = 19
	ActionType_ADD_PARTICIPANT_TO_RCS_GROUP           ActionType = 20
	ActionType_GET_CONVERSATION_TYPE                  ActionType = 21
	ActionType_NOTIFY_DITTO_ACTIVITY                  ActionType = 22
	ActionType_DELETE_MESSAGE                         ActionType = 23
	ActionType_INSTALL_STICKER_SET                    ActionType = 24
	ActionType_RESEND_MESSAGE                         ActionType = 25
	ActionType_GET_CONTACT_RCS_GROUP_STATUS           ActionType = 26
	ActionType_DOWNLOAD_MESSAGE                       ActionType = 27
	ActionType_LIST_TOP_CONTACTS                      ActionType = 28
	ActionType_GET_CONTACTS_THUMBNAIL                 ActionType = 29
	ActionType_CHANGE_PARTICIPANT_COLOR               ActionType = 30
	ActionType_IS_BUGLE_DEFAULT                       ActionType = 31
	ActionType_STICKER_USER_CONTEXT                   ActionType = 32
	ActionType_FAVORITE_STICKER_PACKS                 ActionType = 33
	ActionType_RECENT_STICKERS                        ActionType = 34
	ActionType_UPDATE_RECENT_STICKERS                 ActionType = 35
	ActionType_GET_FULL_SIZE_IMAGE                    ActionType = 36
	ActionType_GET_PARTICIPANTS_THUMBNAIL             ActionType = 37
	ActionType_SEND_REACTION                          ActionType = 38
	ActionType_SEND_REPLY                             ActionType = 39
	ActionType_GET_BLOB_FOR_ATTACHMENT                ActionType = 40
	ActionType_GET_DEVICES_AVAILABLE_FOR_GAIA_PAIRING ActionType = 41
	ActionType_CREATE_GAIA_PAIRING                    ActionType = 42
	ActionType_GET_CONVERSATION                       ActionType = 43
	ActionType_CREATE_GAIA_PAIRING_CLIENT_INIT        ActionType = 44
	ActionType_CREATE_GAIA_PAIRING_CLIENT_FINISHED    ActionType = 45
	ActionType_UNPAIR_GAIA_PAIRING                    ActionType = 46
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:    "UNSPECIFIED",
		1:    "LIST_CONVERSATIONS",
		2:    "LIST_MESSAGES",
		3:    "SEND_MESSAGE",
		1111: "LIST_CONVERSATIONS_SYNC",
		4:    "MESSAGE_UPDATES",
		6:    "LIST_CONTACTS",
		7:    "CONVERSATION_UPDATES",
		9:    "GET_OR_CREATE_CONVERSATION",
		10:   "MESSAGE_READ",
		11:   "BROWSER_PRESENCE_CHECK",
		12:   "TYPING_UPDATES",
		13:   "SETTINGS_UPDATE",
		14:   "USER_ALERT",
		15:   "UPDATE_CONVERSATION",
		16:   "GET_UPDATES",
		17:   "ACK_BROWSER_PRESENCE",
		18:   "LIST_STICKER_SETS",
		19:   "LEAVE_RCS_GROUP",
		20:   "ADD_PARTICIPANT_TO_RCS_GROUP",
		21:   "GET_CONVERSATION_TYPE",
		22:   "NOTIFY_DITTO_ACTIVITY",
		23:   "DELETE_MESSAGE",
		24:   "INSTALL_STICKER_SET",
		25:   "RESEND_MESSAGE",
		26:   "GET_CONTACT_RCS_GROUP_STATUS",
		27:   "DOWNLOAD_MESSAGE",
		28:   "LIST_TOP_CONTACTS",
		29:   "GET_CONTACTS_THUMBNAIL",
		30:   "CHANGE_PARTICIPANT_COLOR",
		31:   "IS_BUGLE_DEFAULT",
		32:   "STICKER_USER_CONTEXT",
		33:   "FAVORITE_STICKER_PACKS",
		34:   "RECENT_STICKERS",
		35:   "UPDATE_RECENT_STICKERS",
		36:   "GET_FULL_SIZE_IMAGE",
		37:   "GET_PARTICIPANTS_THUMBNAIL",
		38:   "SEND_REACTION",
		39:   "SEND_REPLY",
		40:   "GET_BLOB_FOR_ATTACHMENT",
		41:   "GET_DEVICES_AVAILABLE_FOR_GAIA_PAIRING",
		42:   "CREATE_GAIA_PAIRING",
		43:   "GET_CONVERSATION",
		44:   "CREATE_GAIA_PAIRING_CLIENT_INIT",
		45:   "CREATE_GAIA_PAIRING_CLIENT_FINISHED",
		46:   "UNPAIR_GAIA_PAIRING",
	}
	ActionType_value = map[string]int32{
		"UNSPECIFIED":                            0,
		"LIST_CONVERSATIONS":                     1,
		"LIST_MESSAGES":                          2,
		"SEND_MESSAGE":                           3,
		"LIST_CONVERSATIONS_SYNC":                1111,
		"MESSAGE_UPDATES":                        4,
		"LIST_CONTACTS":                          6,
		"CONVERSATION_UPDATES":                   7,
		"GET_OR_CREATE_CONVERSATION":             9,
		"MESSAGE_READ":                           10,
		"BROWSER_PRESENCE_CHECK":                 11,
		"TYPING_UPDATES":                         12,
		"SETTINGS_UPDATE":                        13,
		"USER_ALERT":                             14,
		"UPDATE_CONVERSATION":                    15,
		"GET_UPDATES":                            16,
		"ACK_BROWSER_PRESENCE":                   17,
		"LIST_STICKER_SETS":                      18,
		"LEAVE_RCS_GROUP":                        19,
		"ADD_PARTICIPANT_TO_RCS_GROUP":           20,
		"GET_CONVERSATION_TYPE":                  21,
		"NOTIFY_DITTO_ACTIVITY":                  22,
		"DELETE_MESSAGE":                         23,
		"INSTALL_STICKER_SET":                    24,
		"RESEND_MESSAGE":                         25,
		"GET_CONTACT_RCS_GROUP_STATUS":           26,
		"DOWNLOAD_MESSAGE":                       27,
		"LIST_TOP_CONTACTS":                      28,
		"GET_CONTACTS_THUMBNAIL":                 29,
		"CHANGE_PARTICIPANT_COLOR":               30,
		"IS_BUGLE_DEFAULT":                       31,
		"STICKER_USER_CONTEXT":                   32,
		"FAVORITE_STICKER_PACKS":                 33,
		"RECENT_STICKERS":                        34,
		"UPDATE_RECENT_STICKERS":                 35,
		"GET_FULL_SIZE_IMAGE":                    36,
		"GET_PARTICIPANTS_THUMBNAIL":             37,
		"SEND_REACTION":                          38,
		"SEND_REPLY":                             39,
		"GET_BLOB_FOR_ATTACHMENT":                40,
		"GET_DEVICES_AVAILABLE_FOR_GAIA_PAIRING": 41,
		"CREATE_GAIA_PAIRING":                    42,
		"GET_CONVERSATION":                       43,
		"CREATE_GAIA_PAIRING_CLIENT_INIT":        44,
		"CREATE_GAIA_PAIRING_CLIENT_FINISHED":    45,
		"UNPAIR_GAIA_PAIRING":                    46,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[1].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[1]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

type MessageType int32

const (
	MessageType_UNKNOWN_MESSAGE_TYPE MessageType = 0
	MessageType_BUGLE_MESSAGE        MessageType = 2
	MessageType_BUGLE_ANNOTATION     MessageType = 16
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "UNKNOWN_MESSAGE_TYPE",
		2:  "BUGLE_MESSAGE",
		16: "BUGLE_ANNOTATION",
	}
	MessageType_value = map[string]int32{
		"UNKNOWN_MESSAGE_TYPE": 0,
		"BUGLE_MESSAGE":        2,
		"BUGLE_ANNOTATION":     16,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[2].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[2]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

type RegisterRefreshPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageAuth       *AuthMessage     `protobuf:"bytes,1,opt,name=messageAuth,proto3" json:"messageAuth,omitempty"`
	CurrBrowserDevice *Device          `protobuf:"bytes,2,opt,name=currBrowserDevice,proto3" json:"currBrowserDevice,omitempty"`
	UnixTimestamp     int64            `protobuf:"varint,3,opt,name=unixTimestamp,proto3" json:"unixTimestamp,omitempty"`
	Signature         []byte           `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	EmptyRefreshArr   *EmptyRefreshArr `protobuf:"bytes,13,opt,name=emptyRefreshArr,proto3" json:"emptyRefreshArr,omitempty"`
	MessageType       int32            `protobuf:"varint,16,opt,name=messageType,proto3" json:"messageType,omitempty"`
}

func (x *RegisterRefreshPayload) Reset() {
	*x = RegisterRefreshPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRefreshPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRefreshPayload) ProtoMessage() {}

func (x *RegisterRefreshPayload) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRefreshPayload.ProtoReflect.Descriptor instead.
func (*RegisterRefreshPayload) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRefreshPayload) GetMessageAuth() *AuthMessage {
	if x != nil {
		return x.MessageAuth
	}
	return nil
}

func (x *RegisterRefreshPayload) GetCurrBrowserDevice() *Device {
	if x != nil {
		return x.CurrBrowserDevice
	}
	return nil
}

func (x *RegisterRefreshPayload) GetUnixTimestamp() int64 {
	if x != nil {
		return x.UnixTimestamp
	}
	return 0
}

func (x *RegisterRefreshPayload) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *RegisterRefreshPayload) GetEmptyRefreshArr() *EmptyRefreshArr {
	if x != nil {
		return x.EmptyRefreshArr
	}
	return nil
}

func (x *RegisterRefreshPayload) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

type EmptyRefreshArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmptyArr *EmptyArr `protobuf:"bytes,9,opt,name=emptyArr,proto3" json:"emptyArr,omitempty"`
}

func (x *EmptyRefreshArr) Reset() {
	*x = EmptyRefreshArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRefreshArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRefreshArr) ProtoMessage() {}

func (x *EmptyRefreshArr) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRefreshArr.ProtoReflect.Descriptor instead.
func (*EmptyRefreshArr) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *EmptyRefreshArr) GetEmptyArr() *EmptyArr {
	if x != nil {
		return x.EmptyArr
	}
	return nil
}

type StartAckMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *int32 `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`
}

func (x *StartAckMessage) Reset() {
	*x = StartAckMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartAckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartAckMessage) ProtoMessage() {}

func (x *StartAckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartAckMessage.ProtoReflect.Descriptor instead.
func (*StartAckMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *StartAckMessage) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type InternalMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *InternalMessageData `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
	Heartbeat *EmptyArr            `protobuf:"bytes,3,opt,name=heartbeat,proto3,oneof" json:"heartbeat,omitempty"`
	Ack       *StartAckMessage     `protobuf:"bytes,4,opt,name=ack,proto3,oneof" json:"ack,omitempty"`
	StartRead *EmptyArr            `protobuf:"bytes,5,opt,name=startRead,proto3,oneof" json:"startRead,omitempty"`
}

func (x *InternalMessage) Reset() {
	*x = InternalMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalMessage) ProtoMessage() {}

func (x *InternalMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalMessage.ProtoReflect.Descriptor instead.
func (*InternalMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *InternalMessage) GetData() *InternalMessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *InternalMessage) GetHeartbeat() *EmptyArr {
	if x != nil {
		return x.Heartbeat
	}
	return nil
}

func (x *InternalMessage) GetAck() *StartAckMessage {
	if x != nil {
		return x.Ack
	}
	return nil
}

func (x *InternalMessage) GetStartRead() *EmptyArr {
	if x != nil {
		return x.StartRead
	}
	return nil
}

type InternalMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseID        string      `protobuf:"bytes,1,opt,name=responseID,proto3" json:"responseID,omitempty"`
	BugleRoute        BugleRoute  `protobuf:"varint,2,opt,name=bugleRoute,proto3,enum=messages.BugleRoute" json:"bugleRoute,omitempty"`
	StartExecute      string      `protobuf:"bytes,3,opt,name=startExecute,proto3" json:"startExecute,omitempty"`
	MessageType       MessageType `protobuf:"varint,5,opt,name=messageType,proto3,enum=messages.MessageType" json:"messageType,omitempty"`
	FinishExecute     string      `protobuf:"bytes,6,opt,name=finishExecute,proto3" json:"finishExecute,omitempty"`
	MillisecondsTaken string      `protobuf:"bytes,7,opt,name=millisecondsTaken,proto3" json:"millisecondsTaken,omitempty"`
	Mobile            *Device     `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Browser           *Device     `protobuf:"bytes,9,opt,name=browser,proto3" json:"browser,omitempty"`
	ProtobufData      []byte      `protobuf:"bytes,12,opt,name=protobufData,proto3" json:"protobufData,omitempty"`
	SignatureID       string      `protobuf:"bytes,17,opt,name=signatureID,proto3" json:"signatureID,omitempty"`
	Timestamp         string      `protobuf:"bytes,21,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *InternalMessageData) Reset() {
	*x = InternalMessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalMessageData) ProtoMessage() {}

func (x *InternalMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalMessageData.ProtoReflect.Descriptor instead.
func (*InternalMessageData) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *InternalMessageData) GetResponseID() string {
	if x != nil {
		return x.ResponseID
	}
	return ""
}

func (x *InternalMessageData) GetBugleRoute() BugleRoute {
	if x != nil {
		return x.BugleRoute
	}
	return BugleRoute_UNKNOWN_BUGLE_ROUTE
}

func (x *InternalMessageData) GetStartExecute() string {
	if x != nil {
		return x.StartExecute
	}
	return ""
}

func (x *InternalMessageData) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_UNKNOWN_MESSAGE_TYPE
}

func (x *InternalMessageData) GetFinishExecute() string {
	if x != nil {
		return x.FinishExecute
	}
	return ""
}

func (x *InternalMessageData) GetMillisecondsTaken() string {
	if x != nil {
		return x.MillisecondsTaken
	}
	return ""
}

func (x *InternalMessageData) GetMobile() *Device {
	if x != nil {
		return x.Mobile
	}
	return nil
}

func (x *InternalMessageData) GetBrowser() *Device {
	if x != nil {
		return x.Browser
	}
	return nil
}

func (x *InternalMessageData) GetProtobufData() []byte {
	if x != nil {
		return x.ProtobufData
	}
	return nil
}

func (x *InternalMessageData) GetSignatureID() string {
	if x != nil {
		return x.SignatureID
	}
	return ""
}

func (x *InternalMessageData) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type InternalRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID     string     `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Timestamp     int64      `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Action        ActionType `protobuf:"varint,4,opt,name=action,proto3,enum=messages.ActionType" json:"action,omitempty"`
	Bool1         bool       `protobuf:"varint,6,opt,name=bool1,proto3" json:"bool1,omitempty"`
	Bool2         bool       `protobuf:"varint,7,opt,name=bool2,proto3" json:"bool2,omitempty"`
	EncryptedData []byte     `protobuf:"bytes,8,opt,name=encryptedData,proto3" json:"encryptedData,omitempty"`
	Bool3         bool       `protobuf:"varint,9,opt,name=bool3,proto3" json:"bool3,omitempty"`
}

func (x *InternalRequestData) Reset() {
	*x = InternalRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalRequestData) ProtoMessage() {}

func (x *InternalRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalRequestData.ProtoReflect.Descriptor instead.
func (*InternalRequestData) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *InternalRequestData) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *InternalRequestData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *InternalRequestData) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_UNSPECIFIED
}

func (x *InternalRequestData) GetBool1() bool {
	if x != nil {
		return x.Bool1
	}
	return false
}

func (x *InternalRequestData) GetBool2() bool {
	if x != nil {
		return x.Bool2
	}
	return false
}

func (x *InternalRequestData) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

func (x *InternalRequestData) GetBool3() bool {
	if x != nil {
		return x.Bool3
	}
	return false
}

type SendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile      *Device          `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	MessageData *SendMessageData `protobuf:"bytes,2,opt,name=messageData,proto3" json:"messageData,omitempty"`
	MessageAuth *SendMessageAuth `protobuf:"bytes,3,opt,name=messageAuth,proto3" json:"messageAuth,omitempty"`
	TTL         int64            `protobuf:"varint,5,opt,name=TTL,proto3" json:"TTL,omitempty"` // might be something related to config
	EmptyArr    *EmptyArr        `protobuf:"bytes,9,opt,name=emptyArr,proto3" json:"emptyArr,omitempty"`
}

func (x *SendMessage) Reset() {
	*x = SendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessage) ProtoMessage() {}

func (x *SendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessage.ProtoReflect.Descriptor instead.
func (*SendMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *SendMessage) GetMobile() *Device {
	if x != nil {
		return x.Mobile
	}
	return nil
}

func (x *SendMessage) GetMessageData() *SendMessageData {
	if x != nil {
		return x.MessageData
	}
	return nil
}

func (x *SendMessage) GetMessageAuth() *SendMessageAuth {
	if x != nil {
		return x.MessageAuth
	}
	return nil
}

func (x *SendMessage) GetTTL() int64 {
	if x != nil {
		return x.TTL
	}
	return 0
}

func (x *SendMessage) GetEmptyArr() *EmptyArr {
	if x != nil {
		return x.EmptyArr
	}
	return nil
}

type SendMessageAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID        string         `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	TachyonAuthToken []byte         `protobuf:"bytes,6,opt,name=tachyonAuthToken,proto3" json:"tachyonAuthToken,omitempty"`
	ConfigVersion    *ConfigVersion `protobuf:"bytes,7,opt,name=configVersion,proto3" json:"configVersion,omitempty"`
}

func (x *SendMessageAuth) Reset() {
	*x = SendMessageAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageAuth) ProtoMessage() {}

func (x *SendMessageAuth) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageAuth.ProtoReflect.Descriptor instead.
func (*SendMessageAuth) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *SendMessageAuth) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SendMessageAuth) GetTachyonAuthToken() []byte {
	if x != nil {
		return x.TachyonAuthToken
	}
	return nil
}

func (x *SendMessageAuth) GetConfigVersion() *ConfigVersion {
	if x != nil {
		return x.ConfigVersion
	}
	return nil
}

type SendMessageInternal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID          string     `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Action             ActionType `protobuf:"varint,2,opt,name=action,proto3,enum=messages.ActionType" json:"action,omitempty"`
	EncryptedProtoData []byte     `protobuf:"bytes,5,opt,name=encryptedProtoData,proto3" json:"encryptedProtoData,omitempty"`
	SessionID          string     `protobuf:"bytes,6,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *SendMessageInternal) Reset() {
	*x = SendMessageInternal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageInternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageInternal) ProtoMessage() {}

func (x *SendMessageInternal) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageInternal.ProtoReflect.Descriptor instead.
func (*SendMessageInternal) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *SendMessageInternal) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SendMessageInternal) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_UNSPECIFIED
}

func (x *SendMessageInternal) GetEncryptedProtoData() []byte {
	if x != nil {
		return x.EncryptedProtoData
	}
	return nil
}

func (x *SendMessageInternal) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

// requestID = 1
//
// encodedData = {
// requestID = 1 ^same
//
// sessionID = 6
// }
type SendMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID       string           `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	BugleRoute      BugleRoute       `protobuf:"varint,2,opt,name=bugleRoute,proto3,enum=messages.BugleRoute" json:"bugleRoute,omitempty"`
	ProtobufData    []byte           `protobuf:"bytes,12,opt,name=protobufData,proto3" json:"protobufData,omitempty"`
	MessageTypeData *MessageTypeData `protobuf:"bytes,23,opt,name=messageTypeData,proto3" json:"messageTypeData,omitempty"`
}

func (x *SendMessageData) Reset() {
	*x = SendMessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageData) ProtoMessage() {}

func (x *SendMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageData.ProtoReflect.Descriptor instead.
func (*SendMessageData) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *SendMessageData) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *SendMessageData) GetBugleRoute() BugleRoute {
	if x != nil {
		return x.BugleRoute
	}
	return BugleRoute_UNKNOWN_BUGLE_ROUTE
}

func (x *SendMessageData) GetProtobufData() []byte {
	if x != nil {
		return x.ProtobufData
	}
	return nil
}

func (x *SendMessageData) GetMessageTypeData() *MessageTypeData {
	if x != nil {
		return x.MessageTypeData
	}
	return nil
}

type MessageTypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmptyArr    *EmptyArr   `protobuf:"bytes,1,opt,name=emptyArr,proto3" json:"emptyArr,omitempty"`
	MessageType MessageType `protobuf:"varint,2,opt,name=messageType,proto3,enum=messages.MessageType" json:"messageType,omitempty"`
}

func (x *MessageTypeData) Reset() {
	*x = MessageTypeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageTypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTypeData) ProtoMessage() {}

func (x *MessageTypeData) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTypeData.ProtoReflect.Descriptor instead.
func (*MessageTypeData) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *MessageTypeData) GetEmptyArr() *EmptyArr {
	if x != nil {
		return x.EmptyArr
	}
	return nil
}

func (x *MessageTypeData) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_UNKNOWN_MESSAGE_TYPE
}

type EmptyArr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyArr) Reset() {
	*x = EmptyArr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyArr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyArr) ProtoMessage() {}

func (x *EmptyArr) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyArr.ProtoReflect.Descriptor instead.
func (*EmptyArr) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

type AuthMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID        string         `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	TachyonAuthToken []byte         `protobuf:"bytes,6,opt,name=tachyonAuthToken,proto3" json:"tachyonAuthToken,omitempty"`
	ConfigVersion    *ConfigVersion `protobuf:"bytes,7,opt,name=configVersion,proto3" json:"configVersion,omitempty"`
}

func (x *AuthMessage) Reset() {
	*x = AuthMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMessage) ProtoMessage() {}

func (x *AuthMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthMessage.ProtoReflect.Descriptor instead.
func (*AuthMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *AuthMessage) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *AuthMessage) GetTachyonAuthToken() []byte {
	if x != nil {
		return x.TachyonAuthToken
	}
	return nil
}

func (x *AuthMessage) GetConfigVersion() *ConfigVersion {
	if x != nil {
		return x.ConfigVersion
	}
	return nil
}

type ReceiveMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *AuthMessage                                `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Unknown *ReceiveMessagesRequest_UnknownEmptyObject2 `protobuf:"bytes,4,opt,name=unknown,proto3,oneof" json:"unknown,omitempty"`
}

func (x *ReceiveMessagesRequest) Reset() {
	*x = ReceiveMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessagesRequest) ProtoMessage() {}

func (x *ReceiveMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessagesRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMessagesRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *ReceiveMessagesRequest) GetAuth() *AuthMessage {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ReceiveMessagesRequest) GetUnknown() *ReceiveMessagesRequest_UnknownEmptyObject2 {
	if x != nil {
		return x.Unknown
	}
	return nil
}

type BaseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TTL      int64     `protobuf:"varint,2,opt,name=TTL,proto3" json:"TTL,omitempty"`
	EmptyArr *EmptyArr `protobuf:"bytes,6,opt,name=emptyArr,proto3" json:"emptyArr,omitempty"`
}

func (x *BaseData) Reset() {
	*x = BaseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseData) ProtoMessage() {}

func (x *BaseData) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseData.ProtoReflect.Descriptor instead.
func (*BaseData) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *BaseData) GetTTL() int64 {
	if x != nil {
		return x.TTL
	}
	return 0
}

func (x *BaseData) GetEmptyArr() *EmptyArr {
	if x != nil {
		return x.EmptyArr
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	SourceID string `protobuf:"bytes,2,opt,name=sourceID,proto3" json:"sourceID,omitempty"`
	Network  string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *Device) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Device) GetSourceID() string {
	if x != nil {
		return x.SourceID
	}
	return ""
}

func (x *Device) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type ConfigVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int32 `protobuf:"varint,3,opt,name=Year,proto3" json:"Year,omitempty"`
	Month int32 `protobuf:"varint,4,opt,name=Month,proto3" json:"Month,omitempty"`
	Day   int32 `protobuf:"varint,5,opt,name=Day,proto3" json:"Day,omitempty"`
	V1    int32 `protobuf:"varint,7,opt,name=V1,proto3" json:"V1,omitempty"`
	V2    int32 `protobuf:"varint,9,opt,name=V2,proto3" json:"V2,omitempty"`
}

func (x *ConfigVersion) Reset() {
	*x = ConfigVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigVersion) ProtoMessage() {}

func (x *ConfigVersion) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigVersion.ProtoReflect.Descriptor instead.
func (*ConfigVersion) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigVersion) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *ConfigVersion) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *ConfigVersion) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *ConfigVersion) GetV1() int32 {
	if x != nil {
		return x.V1
	}
	return 0
}

func (x *ConfigVersion) GetV2() int32 {
	if x != nil {
		return x.V2
	}
	return 0
}

type ReceiveMessagesRequest_UnknownEmptyObject1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiveMessagesRequest_UnknownEmptyObject1) Reset() {
	*x = ReceiveMessagesRequest_UnknownEmptyObject1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMessagesRequest_UnknownEmptyObject1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessagesRequest_UnknownEmptyObject1) ProtoMessage() {}

func (x *ReceiveMessagesRequest_UnknownEmptyObject1) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessagesRequest_UnknownEmptyObject1.ProtoReflect.Descriptor instead.
func (*ReceiveMessagesRequest_UnknownEmptyObject1) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13, 0}
}

type ReceiveMessagesRequest_UnknownEmptyObject2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unknown *ReceiveMessagesRequest_UnknownEmptyObject1 `protobuf:"bytes,2,opt,name=unknown,proto3" json:"unknown,omitempty"`
}

func (x *ReceiveMessagesRequest_UnknownEmptyObject2) Reset() {
	*x = ReceiveMessagesRequest_UnknownEmptyObject2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMessagesRequest_UnknownEmptyObject2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessagesRequest_UnknownEmptyObject2) ProtoMessage() {}

func (x *ReceiveMessagesRequest_UnknownEmptyObject2) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessagesRequest_UnknownEmptyObject2.ProtoReflect.Descriptor instead.
func (*ReceiveMessagesRequest_UnknownEmptyObject2) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13, 1}
}

func (x *ReceiveMessagesRequest_UnknownEmptyObject2) GetUnknown() *ReceiveMessagesRequest_UnknownEmptyObject1 {
	if x != nil {
		return x.Unknown
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xbc, 0x02, 0x0a, 0x16, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x3e,
	0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x11, 0x63, 0x75, 0x72,
	0x72, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x41, 0x72, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x41, 0x72, 0x72, 0x52, 0x0f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x41, 0x72, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x0f, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x72, 0x72, 0x12, 0x2e, 0x0a, 0x08,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41,
	0x72, 0x72, 0x52, 0x08, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x22, 0x36, 0x0a, 0x0f,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x02, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x35, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x48, 0x01, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x02, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72,
	0x48, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x63, 0x6b, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x22, 0xd6, 0x03,
	0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x75, 0x67, 0x6c, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x67, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x0a, 0x62, 0x75, 0x67, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12,
	0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x54, 0x61,
	0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c,
	0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x31, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62,
	0x6f, 0x6f, 0x6c, 0x32, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f,
	0x6f, 0x6c, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x33,
	0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x54, 0x54, 0x4c, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x41,
	0x72, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x52, 0x08, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x61, 0x63, 0x68,
	0x79, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x10, 0x74, 0x61, 0x63, 0x68, 0x79, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xce, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x75, 0x67, 0x6c, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x67, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x0a, 0x62, 0x75, 0x67, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x52,
	0x08, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x22, 0x96,
	0x01, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x61, 0x63, 0x68, 0x79, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x74, 0x61, 0x63, 0x68, 0x79, 0x6f, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x53, 0x0a,
	0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x32, 0x48, 0x00, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x88,
	0x01, 0x01, 0x1a, 0x15, 0x0a, 0x13, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x1a, 0x65, 0x0a, 0x13, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x32,
	0x12, 0x4e, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x22, 0x4c, 0x0a, 0x08,
	0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x4c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x54, 0x54, 0x4c, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72,
	0x52, 0x08, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x72, 0x72, 0x22, 0x56, 0x0a, 0x06, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x22, 0x6b, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x59, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x44, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x44, 0x61, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x56, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x56, 0x31, 0x12,
	0x0e, 0x0a, 0x02, 0x56, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x56, 0x32, 0x2a,
	0x43, 0x0a, 0x0a, 0x42, 0x75, 0x67, 0x6c, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x17, 0x0a,
	0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x42, 0x55, 0x47, 0x4c, 0x45, 0x5f, 0x52,
	0x4f, 0x55, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x13, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0x0e, 0x2a, 0x8b, 0x09, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10,
	0x03, 0x12, 0x1c, 0x0a, 0x17, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52,
	0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0xd7, 0x08, 0x12,
	0x13, 0x0a, 0x0f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x53, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x54, 0x41, 0x43, 0x54, 0x53, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x56, 0x45,
	0x52, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x53, 0x10,
	0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x09, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x41,
	0x44, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x0b, 0x12,
	0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x53, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x53, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x10, 0x0e, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x0f, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x53,
	0x10, 0x10, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x4b, 0x5f, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45,
	0x52, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x11, 0x12, 0x15, 0x0a, 0x11,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x54,
	0x53, 0x10, 0x12, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x43, 0x53,
	0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x13, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x44, 0x44, 0x5f,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x52,
	0x43, 0x53, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x14, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x45,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x15, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f,
	0x44, 0x49, 0x54, 0x54, 0x4f, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x16,
	0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x10, 0x17, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x5f,
	0x53, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x18, 0x12, 0x12, 0x0a,
	0x0e, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10,
	0x19, 0x12, 0x20, 0x0a, 0x1c, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54,
	0x5f, 0x52, 0x43, 0x53, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x10, 0x1a, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x1b, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x49, 0x53,
	0x54, 0x5f, 0x54, 0x4f, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x10, 0x1c,
	0x12, 0x1a, 0x0a, 0x16, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53,
	0x5f, 0x54, 0x48, 0x55, 0x4d, 0x42, 0x4e, 0x41, 0x49, 0x4c, 0x10, 0x1d, 0x12, 0x1c, 0x0a, 0x18,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41,
	0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x10, 0x1e, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x53,
	0x5f, 0x42, 0x55, 0x47, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x1f,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x10, 0x20, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x41,
	0x56, 0x4f, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x50,
	0x41, 0x43, 0x4b, 0x53, 0x10, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x43, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x52, 0x53, 0x10, 0x22, 0x12, 0x1a, 0x0a, 0x16, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x49,
	0x43, 0x4b, 0x45, 0x52, 0x53, 0x10, 0x23, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x45, 0x54, 0x5f, 0x46,
	0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x24,
	0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50,
	0x41, 0x4e, 0x54, 0x53, 0x5f, 0x54, 0x48, 0x55, 0x4d, 0x42, 0x4e, 0x41, 0x49, 0x4c, 0x10, 0x25,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x26, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x50, 0x4c,
	0x59, 0x10, 0x27, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x42, 0x5f,
	0x46, 0x4f, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x28,
	0x12, 0x2a, 0x0a, 0x26, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x53, 0x5f,
	0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x47, 0x41,
	0x49, 0x41, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x29, 0x12, 0x17, 0x0a, 0x13,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x41, 0x49, 0x41, 0x5f, 0x50, 0x41, 0x49, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x2a, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x56, 0x45, 0x52, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x2b, 0x12, 0x23, 0x0a, 0x1f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x41, 0x49, 0x41, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x49,
	0x4e, 0x47, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x2c,
	0x12, 0x27, 0x0a, 0x23, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x41, 0x49, 0x41, 0x5f,
	0x50, 0x41, 0x49, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x2d, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x50,
	0x41, 0x49, 0x52, 0x5f, 0x47, 0x41, 0x49, 0x41, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x2e, 0x2a, 0x50, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x42,
	0x55, 0x47, 0x4c, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x42, 0x55, 0x47, 0x4c, 0x45, 0x5f, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x10, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_messages_proto_goTypes = []interface{}{
	(BugleRoute)(0),                                    // 0: messages.BugleRoute
	(ActionType)(0),                                    // 1: messages.ActionType
	(MessageType)(0),                                   // 2: messages.MessageType
	(*RegisterRefreshPayload)(nil),                     // 3: messages.RegisterRefreshPayload
	(*EmptyRefreshArr)(nil),                            // 4: messages.EmptyRefreshArr
	(*StartAckMessage)(nil),                            // 5: messages.StartAckMessage
	(*InternalMessage)(nil),                            // 6: messages.InternalMessage
	(*InternalMessageData)(nil),                        // 7: messages.InternalMessageData
	(*InternalRequestData)(nil),                        // 8: messages.InternalRequestData
	(*SendMessage)(nil),                                // 9: messages.SendMessage
	(*SendMessageAuth)(nil),                            // 10: messages.SendMessageAuth
	(*SendMessageInternal)(nil),                        // 11: messages.SendMessageInternal
	(*SendMessageData)(nil),                            // 12: messages.SendMessageData
	(*MessageTypeData)(nil),                            // 13: messages.MessageTypeData
	(*EmptyArr)(nil),                                   // 14: messages.EmptyArr
	(*AuthMessage)(nil),                                // 15: messages.AuthMessage
	(*ReceiveMessagesRequest)(nil),                     // 16: messages.ReceiveMessagesRequest
	(*BaseData)(nil),                                   // 17: messages.BaseData
	(*Device)(nil),                                     // 18: messages.Device
	(*ConfigVersion)(nil),                              // 19: messages.ConfigVersion
	(*ReceiveMessagesRequest_UnknownEmptyObject1)(nil), // 20: messages.ReceiveMessagesRequest.UnknownEmptyObject1
	(*ReceiveMessagesRequest_UnknownEmptyObject2)(nil), // 21: messages.ReceiveMessagesRequest.UnknownEmptyObject2
}
var file_messages_proto_depIdxs = []int32{
	15, // 0: messages.RegisterRefreshPayload.messageAuth:type_name -> messages.AuthMessage
	18, // 1: messages.RegisterRefreshPayload.currBrowserDevice:type_name -> messages.Device
	4,  // 2: messages.RegisterRefreshPayload.emptyRefreshArr:type_name -> messages.EmptyRefreshArr
	14, // 3: messages.EmptyRefreshArr.emptyArr:type_name -> messages.EmptyArr
	7,  // 4: messages.InternalMessage.data:type_name -> messages.InternalMessageData
	14, // 5: messages.InternalMessage.heartbeat:type_name -> messages.EmptyArr
	5,  // 6: messages.InternalMessage.ack:type_name -> messages.StartAckMessage
	14, // 7: messages.InternalMessage.startRead:type_name -> messages.EmptyArr
	0,  // 8: messages.InternalMessageData.bugleRoute:type_name -> messages.BugleRoute
	2,  // 9: messages.InternalMessageData.messageType:type_name -> messages.MessageType
	18, // 10: messages.InternalMessageData.mobile:type_name -> messages.Device
	18, // 11: messages.InternalMessageData.browser:type_name -> messages.Device
	1,  // 12: messages.InternalRequestData.action:type_name -> messages.ActionType
	18, // 13: messages.SendMessage.mobile:type_name -> messages.Device
	12, // 14: messages.SendMessage.messageData:type_name -> messages.SendMessageData
	10, // 15: messages.SendMessage.messageAuth:type_name -> messages.SendMessageAuth
	14, // 16: messages.SendMessage.emptyArr:type_name -> messages.EmptyArr
	19, // 17: messages.SendMessageAuth.configVersion:type_name -> messages.ConfigVersion
	1,  // 18: messages.SendMessageInternal.action:type_name -> messages.ActionType
	0,  // 19: messages.SendMessageData.bugleRoute:type_name -> messages.BugleRoute
	13, // 20: messages.SendMessageData.messageTypeData:type_name -> messages.MessageTypeData
	14, // 21: messages.MessageTypeData.emptyArr:type_name -> messages.EmptyArr
	2,  // 22: messages.MessageTypeData.messageType:type_name -> messages.MessageType
	19, // 23: messages.AuthMessage.configVersion:type_name -> messages.ConfigVersion
	15, // 24: messages.ReceiveMessagesRequest.auth:type_name -> messages.AuthMessage
	21, // 25: messages.ReceiveMessagesRequest.unknown:type_name -> messages.ReceiveMessagesRequest.UnknownEmptyObject2
	14, // 26: messages.BaseData.emptyArr:type_name -> messages.EmptyArr
	20, // 27: messages.ReceiveMessagesRequest.UnknownEmptyObject2.unknown:type_name -> messages.ReceiveMessagesRequest.UnknownEmptyObject1
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRefreshPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRefreshArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartAckMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalMessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageInternal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageTypeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyArr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMessagesRequest_UnknownEmptyObject1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMessagesRequest_UnknownEmptyObject2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_messages_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_messages_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
